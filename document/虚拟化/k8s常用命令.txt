
一、kubectl 命令行的语法如下：
	kubectl [command]  [TYPE]  [NAME] [flags]
	上面的命令是： kubectl命令行中，指定执行什么操作（command），指定什么类型资源对象（type），指定此类型的资源对象名称（name）,指定可选参数（flags）,后面的参数就是为了修饰那个唯一的对象

二、常用的kubectl命令
	列出命名空间
		kubectl get namespace
		
	列出可用资源
		kubectl get pod/node/svc/deployment --all-namespace
		kubectl get StorageClass
	显示有关资源的详细信息
		kubectl describe pod nvjob-lnrxj -n default

	从 Pod 中的容器打印日志
		kubectl logs <pod_name> -n <namespace>

	在 Pod 中的容器执行命令
		kubectl exec <pod_name> -n <namespace> date
		kubectl delete pod <pod_name> -n <namespace>

	强制重启pod
		kubectl get pod -n {namespace} {podname} -o yaml | kubectl replace --force -f -
	
	强制重新部署
		kubectl get deployments -n  {namespace} {deploymentsname} -o yaml | kubectl replace --force -f -

	通过yaml文件创建：
		kubectl create -f xxx.yaml （不建议使用，无法更新，必须先delete）
		kubectl apply -f xxx.yaml（创建+更新，可以重复使用）
	通过yaml文件删除：
		kubectl delete -f xxx.yaml
	
三、k8s yaml相关
	1、通过变量获取容器相关信息
	env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    - name: NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    引用$(MY_POD_NAME)

四、关联pvc到特定的pv
	kind: PersistentVolumeClaim
	apiVersion: v1
	metadata:
	  name: nfs-pvc
	spec:
	  accessModes:
		- ReadWriteMany
	  storageClassName: ""
	  resources:
		requests:
		  storage: 90Mi
	  selector:
		matchLabels:
		  pv: nfs-pv